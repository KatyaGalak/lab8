/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'application'
    id 'io.freefair.lombok' version '8.12'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.openjdk.jmh:jmh-core:1.34'

    implementation 'org.openjfx:javafx-controls:23.0.1'
    implementation 'org.openjfx:javafx-fxml:23.0.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.apache.commons:commons-csv:1.9.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.15.0'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.2'

    implementation 'commons-codec:commons-codec:1.15'

    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'

    implementation 'org.glassfish.jaxb:jaxb-xjc:4.0.0'

    implementation 'org.postgresql:postgresql:42.7.4'
}

application {
    // Define the main class for the application.
    mainClass = 'lab8.client.Client'
}

javafx {
    version = '23.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

jar {
    enabled = false // Отключаем стандартную задачу jar
}


// Задача для сборки JAR клиента
tasks.register('clientJar', Jar) {
    archiveBaseName = 'ClientApp'
    manifest {
        attributes 'Main-Class': 'lab8.client.ClientMain'
    }
    from(sourceSets.main.output) {
        include 'lab8/client/**'
        include 'lab8/shared/**'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Задача для сборки JAR сервера
tasks.register('serverJar', Jar) {
    archiveBaseName = 'ServerApp'
    manifest {
        attributes 'Main-Class': 'lab8.server.ServerMain'
    }
    from(sourceSets.main.output) {
        include 'lab8/server/**'
        include 'lab8/shared/**'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

run {
    standardInput = System.in
    jvmArgs = [
            '--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED',
            '--add-opens=javafx.controls/javafx.scene.control=ALL-UNNAMED',
            '--add-opens=javafx.base/javafx.collections=ALL-UNNAMED',
            '--add-opens=javafx.base/javafx.beans.property=ALL-UNNAMED',
            '--add-opens=javafx.fxml/javafx.fxml=ALL-UNNAMED'
    ]
}

tasks.build {
    dependsOn 'clientJar'
    dependsOn 'serverJar'
}
// Альтернативный способ - указываем путь к JDK 21
// gradle.properties: org.gradle.java.home=/Library/Java/JavaVirtualMachines/temurin-21.jdk/Contents/Home